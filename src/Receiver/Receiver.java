/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Receiver.java
 *
 * Created on Jul 26, 2013, 6:29:42 PM
 */
package Receiver;
import com.constants.*;
import Intermediate_nodes.IncomingDataDetails;
import Intermediate_nodes.Retrivingfiles;
import com.tj.user.Db;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
//import com.mohan.database.*;

/**
 *
 * @author Admin
 */
public class Receiver extends javax.swing.JFrame {
ServerSocket acksocket,ack1socket;
//Socket socket;
Socket sock; 
String s1,s2,s3,s4,s5;
int filesize=9022386; // filesize temporary hardcoded
int bytesRead,rv=0;
int current = 0;
 String str = "";
    ResultSet rs1, rs2, rs, rs3, rs4 = null;
    PreparedStatement stat, stat1, stat2, stat3, stat4 = null;
    /** Creates new form Receiver */
    public Receiver() throws UnknownHostException, IOException, SQLException {
        
        initComponents();
        setTitle("A Probabilistic Misbehavior Detection");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EEACK Receiver");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Receiver View", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.white)); // NOI18N
        jPanel2.setOpaque(false);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Incoming Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Connect");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Send ACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Verification");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("i-Trust");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 12, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 13, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(8, 8, 8))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 16, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(74, 74, 74)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 390, 310));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(158, 68, 203));
        jLabel2.setText("Receiver");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 90, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plain-dark-blue-2014.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 470));

        setSize(new java.awt.Dimension(518, 504));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            save();
            datas();
        } catch (IOException ex) {
            Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            sock = new Socket(Constants.ReceiverIpAddress,4242);
        } catch (UnknownHostException ex) {
            Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    System.exit(0);    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    try {
        String ack="Data reached the destination - RECEIVER";
        
         //File Name
        File userFile = new File(str);
        String filename = userFile.getName();
        String org="null";
				String query="Select ackid from acknowledge where filename=?";
				PreparedStatement  check=Db.con().prepareStatement(query);
                                check.setString(1, filename);
                                ResultSet rs=check.executeQuery();
                                    if(rs.next())
                                    {
                                        int ackid=rs.getInt(1);
                                         java.util.Date now = new java.util.Date();
                              String DATE_FORMAT = "yyyy-MM-dd hh:mm:ss";
                              SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
                              String strDateNew = sdf.format(now) ;
        Statement st = Db.con().createStatement();
        st.executeUpdate("update acknowledge set ack='" + ack + "',acktime='"+strDateNew+"' where ackid=" + ackid + "");
        JOptionPane.showMessageDialog(null,"Acknowledge sent to sender");
                                    }
    } catch (SQLException ex) {
        Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            String result = JOptionPane.showInputDialog(this, "Please enter the Sourcename:");
            String sql1 = "Select publickey,nodeid from nodedetails where nodename='" + result + "'";
            PreparedStatement stat2 = Db.con().prepareStatement(sql1);
            ResultSet rs = stat2.executeQuery();
            if (rs.next()) {
                String publick = rs.getString(1);
                int sid = rs.getInt(2);
                try {
                    String filen = str;
                    MessageDigest md = MessageDigest.getInstance("MD5");
                    FileInputStream fis = new FileInputStream(filen);

                    byte[] dataBytes = new byte[1024];

                    int nread = 0;
                    while ((nread = fis.read(dataBytes)) != -1) {
                        md.update(dataBytes, 0, nread);
                    };
                    byte[] mdbytes = md.digest();

                    //convert the byte to hex format method 1
                    StringBuffer sb = new StringBuffer();
                    for (int i = 0; i < mdbytes.length; i++) {
                        sb.append(Integer.toString((mdbytes[i] & 0xff) + 0x100, 16).substring(1));
                    }
                    String msgd = sb.toString();
                    String priv = "";

                    String sql = "Select d.dsig,n.privatekey,d.dsfilename from digitalsig d,nodedetails n where d.nodeid=" + sid + " and d.msgdg='" + msgd + "' and n.nodeid=d.nodeid";
                    stat = Db.con().prepareStatement(sql);
                    rs = stat.executeQuery();
                    if (rs.next()) {
                        String digit = rs.getString(1);
                        String pkey = rs.getString(2);
                        String dsfile = rs.getString(3);
                        int j = digit.lastIndexOf('@');
                        if (j > 0) {
                            priv = digit.substring(j + 1);
                        }
                        if (priv.equals(pkey)) {
                            File userFile = new File(str);
                            String filename = userFile.getName();String sender="Receiver";
        String rece="Sender";
        String ackn="null";
        String time="null";
//                    Statement st = Connection.createStatement();
//                    st.executeUpdate("update acknowledge set originalname='" + dsfile + "' where filename=" + filename + "");
                   PreparedStatement pre = Db.con().prepareStatement("insert into acknowledge(ack,sender,receiver,filename,originalname,acktime)values (?,?,?,?,?,?)");
                     pre.setString(1, ackn);
                    pre.setString(2, sender);
                    pre.setString(3, rece);
                    pre.setString(4, filename);
                    pre.setString(5, dsfile);
                    pre.setString(6,time);
                    pre.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Authenticated for further process");

                        } else {
                            JOptionPane.showMessageDialog(null, "False Data ");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "False Data");
                    }

                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(IncomingDataDetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(IncomingDataDetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(IncomingDataDetails.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(IncomingDataDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "UnAuthorized");
            }
        } catch (SQLException ex) {
            Logger.getLogger(IncomingDataDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
        MisDetect.nodename="Receiver";
        MisDetect s=new MisDetect();
        s.show();
        String action="Performing SACK";
            String nname="Receiver";
            new logdetails(nname,action);
    } catch (Exception ex) {
        
         System.out.println(ex);
         
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new Receiver().setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Receiver.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    } 

    
    public void save() throws IOException{
    JFileChooser ch = new JFileChooser();
    rv =ch.showSaveDialog(ch);
     if (rv == JFileChooser.APPROVE_OPTION){
                           str= ch.getSelectedFile().toString();
                           System.out.println(" Path : "+str);
                        }   
       
    }
    
    public void datas()
    {
        try 
         {
    byte [] mybytearray  = new byte [filesize];
    InputStream is = sock.getInputStream();
    FileOutputStream fos = new FileOutputStream(str);
    BufferedOutputStream bos = new BufferedOutputStream(fos);
    bytesRead = is.read(mybytearray,0,mybytearray.length);
    current = bytesRead;
    do {
       bytesRead =
          is.read(mybytearray, current, (mybytearray.length-current));
       if(bytesRead >= 0) current += bytesRead;
    } while(bytesRead > -1);

    bos.write(mybytearray, 0 , current);
    bos.flush();
    bos.close();
    sock.close();
      System.out.println(" Received File ");
        Retrivingfiles file = new Retrivingfiles(str);
        String[] fileary = file.OpenFile();
        int i;
        for (i = 0; i < fileary.length; i++) {
            jTextArea1.append(fileary[i] + '\n');
            //System.out.println(fileary[i]);
        }
         //File Name
        File userFile = new File(str);
        String filename = userFile.getName();
        
        //File Size
        double bytes = str.length();
        double kbytes = bytes / 1024;
        String size = Double.toString(kbytes);
        
        //File type
        String extension = "";

        int in = str.lastIndexOf('.');
        if (in > 0) {
            extension = str.substring(in + 1);
        }
        
         
    }catch(Exception e)
    {
        e.printStackTrace();
        System.out.println(e);
    }}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
